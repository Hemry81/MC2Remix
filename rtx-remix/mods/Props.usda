#usda 1.0
(
    upAxis = "Y"
)

over "RootNode"
{
    over "Looks"
    {
        over "mat_3F79EB33726E0B88"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./textures/Props/3F79EB33726E0B88_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_34A9B0CC95DCDACA"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./textures/Props/34A9B0CC95DCDACA_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_3C1496390AC0249A"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./textures/Props/3C1496390AC0249A_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }
    }

    over "meshes"
    {
        over "mesh_49C33E939A33F158"
        {
            def Xform "len" (
                prepend references = @./meshes/Props/Lights/square_light/len.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_C3FD479BB5C951BF"
        {
            def Xform "len" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                references = @./meshes/Props/Lights/square_light/len.usd@
            )
            {
                rel material:binding = </Looks/light> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

over "Looks"
{
    def Material "light"
    {
        token outputs:mdl:displacement.connect = </Looks/light/Shader.outputs:out>
        token outputs:mdl:surface.connect = </Looks/light/Shader.outputs:out>
        token outputs:mdl:volume.connect = </Looks/light/Shader.outputs:out>

        def Shader "Shader"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @./materials/AperturePBR_Opacity.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
            color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999) (
                customData = {
                    float3 default = (1, 0.1, 0.1)
                    dictionary range = {
                        float3 max = (1, 1, 1)
                        float3 min = (0, 0, 0)
                    }
                }
                displayGroup = "Emission"
                displayName = "Emissive Color"
                doc = """The emissive color when no emissive color texture is specified.

"""
                hidden = false
                renderType = "color"
            )
            float inputs:emissive_intensity = 2 (
                customData = {
                    float default = 40
                    dictionary range = {
                        float max = 65504
                        float min = 0
                    }
                }
                displayGroup = "Emission"
                displayName = "Emissive Intensity"
                doc = """Intensity of the emission

"""
                hidden = false
            )
            bool inputs:enable_emission = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Emission"
                displayName = "Enable Emission"
                doc = """Enables the emission of light from the material

"""
                hidden = false
            )
            token outputs:out (
                renderType = "material"
            )
        }
    }
}

