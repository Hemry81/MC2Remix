#usda 1.0
(
    upAxis = "Y"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_C57865572FA46DCF" (
            delete references = @./deps/captures/meshes/mesh_C57865572FA46DCF.usd@</mesh_C57865572FA46DCF>
        )
        {
        }

        over "mesh_22AEBF8212DF8724" (
            delete references = @./deps/captures/meshes/mesh_22AEBF8212DF8724.usd@</mesh_22AEBF8212DF8724>
        )
        {
        }

        over "mesh_CB599FCC71AE5FCF" (
            delete references = @./deps/captures/meshes/mesh_CB599FCC71AE5FCF.usd@</mesh_CB599FCC71AE5FCF>
        )
        {
        }

        over "mesh_BDE43F37BB0F3FF8" (
            delete references = @./deps/captures/meshes/mesh_BDE43F37BB0F3FF8.usd@</mesh_BDE43F37BB0F3FF8>
        )
        {
        }

        over "mesh_0870CA0F98C89763" (
            delete references = @./deps/captures/meshes/mesh_0870CA0F98C89763.usd@</mesh_0870CA0F98C89763>
        )
        {
        }

        over "mesh_D857C82064AA38E7" (
            delete references = @./deps/captures/meshes/mesh_D857C82064AA38E7.usd@</mesh_D857C82064AA38E7>
        )
        {
        }

        over "mesh_65D3790BB637B391" (
            delete references = @./deps/captures/meshes/mesh_65D3790BB637B391.usd@</mesh_65D3790BB637B391>
        )
        {
        }

        over "mesh_C526FE71FFB533AF"
        {
            def Xform "Arrow" (
                prepend references = @./meshes/Effect/Arrow.usd@
            )
            {
                double3 xformOp:rotateXYZ = (-90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }
    }

    over "Looks"
    {
        over "mat_350C6D1841DA52BF"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./textures/Effect/Arrow_BaseColor.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 1 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./textures/Effect/Arrow_Emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
                float inputs:metallic_constant = 1 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Amount"
                    doc = """How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified).

"""
                    hidden = false
                )
                asset inputs:normalmap_texture = @./textures/Effect/Arrow_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:reflection_roughness_constant = 0.5 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Amount"
                    doc = """Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified).

"""
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @./textures/Effect/Arrow_Roughness.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_720689BACE9FBAED"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./textures/Effect/Spark_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 10 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./textures/Effect/Spark_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_FB68B1BF0EF192A8"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./textures/Effect/Smoke_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }
    }
}

def "Looks"
{
    def Material "SpotLight"
    {
        token outputs:mdl:displacement.connect = </Looks/SpotLight/Shader.outputs:out>
        token outputs:mdl:surface.connect = </Looks/SpotLight/Shader.outputs:out>
        token outputs:mdl:volume.connect = </Looks/SpotLight/Shader.outputs:out>

        def Shader "Shader"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @./materials/AperturePBR_Opacity.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
            color3f inputs:diffuse_color_constant = (0.2, 0.2, 0.2) (
                customData = {
                    float3 default = (0.2, 0.2, 0.2)
                    dictionary range = {
                        float3 max = (1, 1, 1)
                        float3 min = (0, 0, 0)
                    }
                }
                displayGroup = "Base Material"
                displayName = "Albedo Color"
                doc = """The base albedo color.  (Used if no texture is specified)

"""
                hidden = false
                renderType = "color"
            )
            asset inputs:diffuse_texture = @./textures/Effect/SpotLight_albedo.dds@ (
                colorSpace = "auto"
                customData = {
                    asset default = @@
                }
                displayGroup = "Base Material"
                displayName = "Albedo/Opacity Map"
                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                hidden = false
                renderType = "texture_2d"
            )
            color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999) (
                customData = {
                    float3 default = (1, 0.1, 0.1)
                    dictionary range = {
                        float3 max = (1, 1, 1)
                        float3 min = (0, 0, 0)
                    }
                }
                displayGroup = "Emission"
                displayName = "Emissive Color"
                doc = """The emissive color when no emissive color texture is specified.

"""
                hidden = false
                renderType = "color"
            )
            float inputs:emissive_intensity = 5 (
                customData = {
                    float default = 40
                    dictionary range = {
                        float max = 65504
                        float min = 0
                    }
                }
                displayGroup = "Emission"
                displayName = "Emissive Intensity"
                doc = """Intensity of the emission

"""
                hidden = false
            )
            bool inputs:enable_emission = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Emission"
                displayName = "Enable Emission"
                doc = """Enables the emission of light from the material

"""
                hidden = false
            )
            bool inputs:enable_thin_film = 0 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Iridescence"
                displayName = "Enable Iridescence"
                doc = """Adds a thin film coating to the material

"""
                hidden = false
            )
            float inputs:opacity_constant = 1 (
                customData = {
                    float default = 1
                    dictionary range = {
                        float max = 1
                        float min = 0
                    }
                }
                displayGroup = "Base Material"
                displayName = "Opacity Amount"
                doc = """0 for completely transparent, 1 for completely opaque.  (Used if no texture is specified)

"""
                hidden = false
            )
            float inputs:reflection_roughness_constant = 1 (
                customData = {
                    float default = 0.5
                    dictionary range = {
                        float max = 1
                        float min = 0
                    }
                }
                displayGroup = "Base Material"
                displayName = "Roughness Amount"
                doc = """Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified).

"""
                hidden = false
            )
            bool inputs:thin_film_thickness_from_albedo_alpha = 0 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Iridescence"
                displayName = "Use Opacity as Thickness"
                doc = """Uses the alpha channel from albedo as source for the thin film thickness. Alpha value is scaled by 1500 and represents thickness in nanometers. Opacity becomes fully opaque in this case.

"""
                hidden = false
            )
            token outputs:out (
                renderType = "material"
            )
        }
    }
}

